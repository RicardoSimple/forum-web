{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.error.cause.js\";\n\n/**\r\n * 全站http配置\r\n *\r\n * axios参数说明\r\n * isSerialize是否开启form表单提交\r\n * isToken是否需要token\r\n */\nimport axios from 'axios';\nimport router from '@/router';\nimport NProgress from 'nprogress'; // progress bar\n\nimport { Message } from 'element-ui';\naxios.defaults.timeout = 10000; //返回其他状态吗\n\naxios.defaults.validateStatus = function (status) {\n  return status >= 200 && status <= 500; // 默认的\n}; //跨域请求，允许保存cookie\n\n\naxios.defaults.withCredentials = true; // axios.defaults.baseURL = '/api'\n// NProgress Configuration\n\nNProgress.configure({\n  showSpinner: false\n}); //HTTP request拦截\n\naxios.interceptors.request.use(function (config) {\n  // console.debug(\" 发起请求:\", config.url)\n  // start progress bar\n  NProgress.start(); // 请求中添加token\n\n  var token = sessionStorage.getItem(\"TOKEN\");\n  config.headers[\"TOKEN\"] = token;\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); //HTTP response拦截\n\naxios.interceptors.response.use(function (res) {\n  console.debug(res.config.url, \"  =》 res:\", res);\n  NProgress.done();\n  var status = Number(res.status) || 200;\n  var message = res.data.message || '后台服务走丢了,请稍后重试...'; // 如果服务器响应非200否者默认统一处理\n\n  if (status !== 200) {\n    Message({\n      message: message,\n      type: 'error'\n    });\n    return Promise.reject(new Error(message));\n  } // 判断是否是文件，是文件就直接返回\n\n\n  if (res.data != null && res.data instanceof Blob || res.headers[\"content-type\"] != null && res.headers[\"content-type\"].indexOf('application/octet-stream') != -1) {\n    return res;\n  } // 需要登录的接口 判断是否登录过期\n\n\n  if (res.data.code === 10000) {\n    Message({\n      message: res.data.msg,\n      type: 'error'\n    }); //router.push({path: \"/login\"});\n    // 跳登录页\n\n    return Promise.reject(new Error(res.data.msg));\n  } // 判断状态码是否不等于200\n\n\n  if (res.data.code !== 200) {\n    Message({\n      message: res.data.msg,\n      type: 'error'\n    });\n    return Promise.reject(new Error(res.data.msg));\n  } // 请求成功\n\n\n  if (res.config != null && res.config.method !== \"get\" && res.config.method !== \"GET\") {\n    // 成功提示\n    Message({\n      message: res.data.msg,\n      type: 'success'\n    });\n  } // 自动刷新 token 来进行续期\n\n\n  if (res.headers.token !== undefined && res.headers.token !== null) {\n    var newToken = res.headers.token;\n    sessionStorage.setItem(\"TOKEN\", newToken); // setToken(newToken);\n    //setStore({name: 'token', content: newToken})\n  }\n\n  return res;\n}, function (error) {\n  NProgress.done();\n  return Promise.reject(new Error(error));\n});\nexport default axios;","map":{"version":3,"names":["axios","router","NProgress","Message","defaults","timeout","validateStatus","status","withCredentials","configure","showSpinner","interceptors","request","use","config","start","token","sessionStorage","getItem","headers","error","Promise","reject","response","res","console","debug","url","done","Number","message","data","type","Error","Blob","indexOf","code","msg","method","undefined","newToken","setItem"],"sources":["D:/project/hub/forum-web/web-client/src/router/axios.js"],"sourcesContent":["/**\r\n * 全站http配置\r\n *\r\n * axios参数说明\r\n * isSerialize是否开启form表单提交\r\n * isToken是否需要token\r\n */\r\nimport axios from 'axios'\r\nimport router from '@/router'\r\nimport NProgress from 'nprogress'  // progress bar\r\nimport {Message} from 'element-ui'\r\naxios.defaults.timeout = 10000;\r\n\r\n//返回其他状态吗\r\naxios.defaults.validateStatus = function (status) {\r\n    return status >= 200 && status <= 500; // 默认的\r\n};\r\n\r\n\r\n//跨域请求，允许保存cookie\r\naxios.defaults.withCredentials = true;\r\n// axios.defaults.baseURL = '/api'\r\n// NProgress Configuration\r\nNProgress.configure({\r\n    showSpinner: false\r\n});\r\n\r\n\r\n//HTTP request拦截\r\naxios.interceptors.request.use(config => {\r\n    // console.debug(\" 发起请求:\", config.url)\r\n    // start progress bar\r\n    NProgress.start();\r\n    // 请求中添加token\r\n    let token = sessionStorage.getItem(\"TOKEN\");\r\n    config.headers[\"TOKEN\"] = token;\r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error)\r\n});\r\n\r\n\r\n\r\n//HTTP response拦截\r\naxios.interceptors.response.use(res => {\r\n    console.debug(res.config.url, \"  =》 res:\", res)\r\n    NProgress.done();\r\n    const status = Number(res.status) || 200;\r\n    const message = res.data.message || '后台服务走丢了,请稍后重试...';\r\n\r\n    // 如果服务器响应非200否者默认统一处理\r\n    if (status !== 200) {\r\n        Message({ message: message,  type: 'error'});\r\n        return Promise.reject(new Error(message))\r\n    }\r\n\r\n    // 判断是否是文件，是文件就直接返回\r\n    if ((res.data != null && res.data instanceof Blob)\r\n        || (res.headers[\"content-type\"] != null && res.headers[\"content-type\"].indexOf('application/octet-stream') != -1)) {\r\n        return res;\r\n    }\r\n\r\n    // 需要登录的接口 判断是否登录过期\r\n    if (res.data.code === 10000) {\r\n        Message({  message: res.data.msg,  type: 'error'  });\r\n        //router.push({path: \"/login\"});\r\n        // 跳登录页\r\n        return Promise.reject(new Error(res.data.msg))\r\n    }\r\n\r\n    // 判断状态码是否不等于200\r\n    if (res.data.code !== 200) {\r\n        Message({  message: res.data.msg,  type: 'error' })\r\n        return Promise.reject(new Error(res.data.msg))\r\n    }\r\n\r\n\r\n    // 请求成功\r\n    if (res.config != null && res.config.method !== \"get\" && res.config.method !== \"GET\") {\r\n        // 成功提示\r\n        Message({  message: res.data.msg,  type: 'success' })\r\n    }\r\n\r\n    // 自动刷新 token 来进行续期\r\n    if (res.headers.token !== undefined && res.headers.token !== null) {\r\n        let newToken = res.headers.token;\r\n        sessionStorage.setItem(\"TOKEN\",newToken)\r\n        // setToken(newToken);\r\n        //setStore({name: 'token', content: newToken})\r\n    }\r\n\r\n\r\n    return res;\r\n}, error => {\r\n    NProgress.done();\r\n    return Promise.reject(new Error(error));\r\n});\r\n\r\nexport default axios;"],"mappings":"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"},"metadata":{},"sourceType":"module"}