{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"C\",\n  data: function data() {\n    return {\n      userDetails: \"\"\n    };\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;EACAA,SADA;EAEAC,IAFA,kBAEA;IACA;MACAC;IADA;EAGA;AANA","names":["name","data","userDetails"],"sourceRoot":"src/views/test","sources":["C.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <H2> xj-client </H2>\r\n        <H5>这里提供该项目 demo 的基础用法</H5>\r\n        <br>\r\n        <el-card class=\"box-card\" style=\"margin-left: 25%;background-color: #FFFFFF;overflow:auto; width: 50%;\">\r\n\r\n            <span style=\"text-align: left\">\r\n                <div>一、目前已完成功能:</div>\r\n                <br/>\r\n                 <li> 1、顶/中/底部分离 </li>\r\n                 <li> 2、顶部菜单 自定义 </li>\r\n                 <li> 3、首页 定义 </li>\r\n                 <li> 3、项目名 定义 </li>\r\n                 <li> 4、router 路由跳转 </li>\r\n                 <li> 5、axios 请求封装 </li>\r\n                 <li> 6、axios 请求响应拦截器 </li>\r\n                 <li> 7、注册/登录</li>\r\n            </span>\r\n        </el-card>\r\n        <br/>\r\n        <el-card class=\"box-card\" style=\"margin-left: 25%;background-color: #FFFFFF;overflow:auto; width: 50%;\">\r\n            <span style=\"text-align: left\">\r\n                <div>二、采用技术:</div>\r\n                <br/>\r\n                 <li> 1、vue2 </li>\r\n                 <li> 2、element2.x </li>\r\n                 <li> 3、avue2.9.4 </li>\r\n            </span>\r\n        </el-card>\r\n        <br/>\r\n        <el-card class=\"box-card\" style=\"margin-left: 25%;background-color: #FFFFFF;overflow:auto; width: 50%;\">\r\n            <span style=\"text-align: left\">\r\n                <div>三、目录结构:</div>\r\n                <br/>\r\n                 <li> src/page  - 顶部底部 </li>\r\n                 <li> ---------- bottom.vue  - 底部信息 </li>\r\n                 <li> ---------- top.vue  - 顶部信息 </li>\r\n                   <br/>\r\n                 <li> src/router  - 路由 </li>\r\n                 <li> ---------- axios.js  - 请求响应拦截器 </li>\r\n                 <li> ----------- index.js  - 路由配置 </li>\r\n                   <br/>\r\n                 <li> src/util   - 请求工具 </li>\r\n                 <li> ----------- crud.js  - 请求工具封装 </li>\r\n                   <br/>\r\n                 <li> src/views  - 功能页面 </li>\r\n                 <li>----------- home    首页  </li>\r\n                 <li>----------- login   登录/注册  </li>\r\n                 <li>----------- test    测试页,顶部菜单点击的所有页面  </li>\r\n                   <br/>\r\n                   <li>src/App.vue    - 项目入口  </li>\r\n                   <li>src/main.js    - 项目核心依赖配置  </li>\r\n                   <li>vue.config.js  - 项目服务信息  </li>\r\n            </span>\r\n\r\n        </el-card>\r\n        <br/>\r\n        <el-card class=\"box-card\" style=\"margin-left: 25%;background-color: #FFFFFF;overflow:auto; width: 50%;\">\r\n            <span style=\"text-align: left\">\r\n                <div>四、请求工具  util.crud.js , 任意vue文件中使用</div>\r\n                  <br/>\r\n                <div>uri = 接口地址</div>\r\n                  <pre>\r\n\r\n        // get 请求\r\n        this.crud.get(uri,params参数).then((res) => {\r\n              // 响应数据\r\n        })\r\n\r\n        // post 请求\r\n        this.crud.post(uri, data参数, params参数).then((res) => {\r\n\r\n        })\r\n\r\n        // put 请求\r\n        this.crud.put(uri, data参数, params参数).then((res) => {\r\n\r\n        })\r\n\r\n        // del 请求\r\n        this.crud.del(uri, data参数,params参数).then((res) => {\r\n\r\n        })\r\n\r\n        // 文件上传 (建议上传接口定义配置文件固定,然后在 crud.js 中读取)\r\n        this.crud.del(upload, path上传接口).then((res) => {\r\n\r\n        })\r\n\r\n        // 文件下载\r\n        this.crud.del(uri, data参数).then((res) => {\r\n\r\n        })\r\n                  </pre>\r\n            </span>\r\n        </el-card>\r\n        <br/>\r\n        <el-card class=\"box-card\" style=\"margin-left: 25%;background-color: #FFFFFF;overflow:auto; width: 50%;\">\r\n            <span style=\"text-align: left\">\r\n                <div>五、登录注册</div>\r\n                  <br/>\r\n                <div> 1、该功能接口目前登录接口模拟对接的 xijia-tool 项目</div>\r\n                  <br/>\r\n                  <div>2、当前登录成功后 获取用户信息到 sessionStorage 缓存中 </div>\r\n                  <br/>\r\n                  <div> 缓存数据如下 , 详见 views/login/login.vue 文件</div>\r\n                  <pre>\r\n        let userData = {\r\n           username: res.data.data.username, //账号\r\n           nickname: res.data.data.nickname, // 昵称\r\n           // fullName: res.data.data.fullName, // 姓名\r\n           head: res.data.data.head, // 头像\r\n        };\r\n                  </pre>\r\n                <div> 重新进入项目会获取用户信息判断是否登录来展示右上角信息 (展示用户信息 还是 登录按钮) </div>\r\n\r\n\r\n                <br/>\r\n               <div>  3、token 处理是在 router.axios.js 中 </div>\r\n                <br/>\r\n               <div>  由于我的接口 token 是通过响应头返回的  </div>\r\n               <div>  响应获取响应头中的 token 存入 sessionStorage  </div>\r\n               <div>  请求获取sessionStorage 的 token 放入请求头  </div>\r\n\r\n            </span>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"C\",\r\n        data() {\r\n            return {\r\n                userDetails: \"\"\r\n            }\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}