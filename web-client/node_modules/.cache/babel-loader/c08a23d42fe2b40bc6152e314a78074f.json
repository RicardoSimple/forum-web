{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from '@/router';\nexport default {\n  name: \"login\",\n  data: function data() {\n    return {\n      obj: {},\n      defaultData: {\n        username: null,\n        password: null\n      },\n      uri: {\n        login: \"/api/client/tool/toolUser/login\"\n      }\n    };\n  },\n  props: {\n    closeDialog: []\n  },\n  computed: {\n    option: function option() {\n      return {\n        submitBtn: false,\n        emptyBtn: false,\n        submitText: '登陆',\n        column: [{\n          label: '账号',\n          prop: 'username',\n          maxlength: 32,\n          showWordLimit: true,\n          span: 20,\n          rules: [{\n            required: true,\n            message: \"请输入 账号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: '密码',\n          prop: 'password',\n          type: 'password',\n          maxlength: 18,\n          showWordLimit: true,\n          span: 20,\n          rules: [{\n            required: true,\n            message: \"请输入 密码\",\n            trigger: \"blur\"\n          }]\n        }]\n      };\n    }\n  },\n  created: function created() {\n    this.obj = this.defaultData;\n  },\n  methods: {\n    emptytChange: function emptytChange() {\n      this.closeDialog(false);\n    },\n    submit: function submit() {\n      var _this = this;\n\n      // console.log(this.uri)\n      this.crud.post(this.uri.login, this.obj).then(function (res) {\n        // 保存登录信息，我这里登录信息是在响应头里面，所以在响应拦截器中处理\n        // sessionStorage.setItem(\"TOKEN\",\"\")\n        _this.findLoginUser(); // router.push({path: \"/app\"});\n\n      });\n    },\n    // 获取当前登录账号信息缓存到sessionStorage\n    findLoginUser: function findLoginUser() {\n      this.crud.get(\"/api/client/tool/toolUser/findLoginUser\").then(function (res) {\n        var userData = {\n          username: res.data.data.username,\n          //账号\n          nickname: res.data.data.nickname,\n          // 昵称\n          fullName: res.data.data.fullName,\n          // 姓名\n          head: res.data.data.head // 头像\n\n        };\n        sessionStorage.setItem(\"userData\", JSON.stringify(userData));\n        window.location.href = \"/\";\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AAEA;EACAA,aADA;EAEAC,IAFA,kBAEA;IACA;MACAC,OADA;MAEAC;QACAC,cADA;QAEAC;MAFA,CAFA;MAMAC;QACAC;MADA;IANA;EAUA,CAbA;EAcAC;IACAC;EADA,CAdA;EAiBAC;IACAC,MADA,oBACA;MACA;QACAC,gBADA;QAEAC,eAFA;QAGAC,gBAHA;QAIAC,SACA;UACAC,WADA;UAEAC,gBAFA;UAGAC,aAHA;UAIAC,mBAJA;UAKAC,QALA;UAMAC;YACAC,cADA;YAEAC,iBAFA;YAGAC;UAHA;QANA,CADA,EAaA;UACAR,WADA;UAEAC,gBAFA;UAGAQ,gBAHA;UAIAP,aAJA;UAKAC,mBALA;UAMAC,QANA;UAOAC;YACAC,cADA;YAEAC,iBAFA;YAGAC;UAHA;QAPA,CAbA;MAJA;IAgCA;EAlCA,CAjBA;EAqDAE,OArDA,qBAqDA;IACA;EACA,CAvDA;EAwDAC;IACAC,YADA,0BACA;MACA;IACA,CAHA;IAIAC,MAJA,oBAIA;MAAA;;MACA;MACA;QACA;QACA;QACA,sBAHA,CAIA;;MACA,CALA;IAMA,CAZA;IAaA;IACAC,aAdA,2BAcA;MACA;QACA;UACA1B,gCADA;UACA;UACA2B,gCAFA;UAEA;UACAC,gCAHA;UAGA;UACAC,wBAJA,CAIA;;QAJA;QAMAC;QACAC;MACA,CATA;IAUA;EAzBA;AAxDA","names":["name","data","obj","defaultData","username","password","uri","login","props","closeDialog","computed","option","submitBtn","emptyBtn","submitText","column","label","prop","maxlength","showWordLimit","span","rules","required","message","trigger","type","created","methods","emptytChange","submit","findLoginUser","nickname","fullName","head","sessionStorage","window"],"sourceRoot":"src/views/login","sources":["login.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n        <el-card class=\"box-card\" style=\"margin-left: 25%;background-color: #fffdf5;overflow:auto; width: 50%;margin-top: 1.5%\">\r\n            <span> 登录 兮家 Tool</span>\r\n            <avue-form style=\"margin-top: 5%\" ref=\"form\" v-model=\"obj\" :option=\"option\"\r\n                       @reset-change=\"emptytChange\"\r\n                       @submit=\"submit\">\r\n            </avue-form>\r\n\r\n            <!-- 注意： 自定义的提交按钮 参数验证无效 -->\r\n            <el-button @click=\"submit\">登录</el-button>\r\n            <span src=\"\" style=\"margin-left: 3%;text-align: center ; font-size: 12px\">\r\n                <router-link to=\"/register\">没有账号</router-link>\r\n             </span>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n<script>\r\n    import router from '@/router'\r\n\r\n    export default {\r\n        name: \"login\",\r\n        data() {\r\n            return {\r\n                obj: {},\r\n                defaultData: {\r\n                    username: null,\r\n                    password: null,\r\n                },\r\n                uri: {\r\n                    login: \"/api/client/tool/toolUser/login\"\r\n                },\r\n            }\r\n        },\r\n        props: {\r\n            closeDialog: [],\r\n        },\r\n        computed: {\r\n            option() {\r\n                return {\r\n                    submitBtn: false,\r\n                    emptyBtn: false,\r\n                    submitText: '登陆',\r\n                    column: [\r\n                        {\r\n                            label: '账号',\r\n                            prop: 'username',\r\n                            maxlength: 32,\r\n                            showWordLimit: true,\r\n                            span: 20,\r\n                            rules: [{\r\n                                required: true,\r\n                                message: \"请输入 账号\",\r\n                                trigger: \"blur\"\r\n                            }]\r\n                        },\r\n                        {\r\n                            label: '密码',\r\n                            prop: 'password',\r\n                            type: 'password',\r\n                            maxlength: 18,\r\n                            showWordLimit: true,\r\n                            span: 20,\r\n                            rules: [{\r\n                                required: true,\r\n                                message: \"请输入 密码\",\r\n                                trigger: \"blur\"\r\n                            }]\r\n                        },\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.obj = this.defaultData\r\n        },\r\n        methods: {\r\n            emptytChange() {\r\n                this.closeDialog(false);\r\n            },\r\n            submit() {\r\n                // console.log(this.uri)\r\n                this.crud.post(this.uri.login, this.obj).then((res) => {\r\n                    // 保存登录信息，我这里登录信息是在响应头里面，所以在响应拦截器中处理\r\n                    // sessionStorage.setItem(\"TOKEN\",\"\")\r\n                    this.findLoginUser();\r\n                    // router.push({path: \"/app\"});\r\n                })\r\n            },\r\n            // 获取当前登录账号信息缓存到sessionStorage\r\n            findLoginUser() {\r\n                this.crud.get(\"/api/client/tool/toolUser/findLoginUser\").then(res => {\r\n                    let userData = {\r\n                        username: res.data.data.username, //账号\r\n                        nickname: res.data.data.nickname, // 昵称\r\n                        fullName: res.data.data.fullName, // 姓名\r\n                        head: res.data.data.head, // 头像\r\n                    };\r\n                    sessionStorage.setItem(\"userData\", JSON.stringify(userData))\r\n                    window.location.href = \"/\"\r\n                })\r\n            },\r\n\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}